//variables to setup basic size and shape of the card and pips
$card-width: 40vw;
$card-height: $card-width*1.4;
$font-size-number: $card-width * 0.1;
$icon-size: $card-width / 5;
$num-columns: 8;
$num-rows: 4;
$one-column: 100% / $num-columns;
$one-row: 100% / $num-rows;
$num-shape-spaces: ($num-columns - 2) / 2;
$one-shape: $one-column * 2;
$loop-start: 1;
$loop-col-end: $num-columns +1;
$loop-row-end: $num-rows +1;


//mixins
@mixin col($span-num) {
    grid-column-start: $span-num;
}

@mixin row($span-num) {
    grid-row-start: $span-num;
}


*,
*:before,
*:after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

//styles to draw a basic outline of a card
.card {
    border: 1px solid grey;
    height: $card-height;
    width: $card-width;
    border-radius: 10px;
    margin: 20px;
    box-shadow: 2px 2px 4px grey;
}

//because it is a card front we want a bit of extra padding
.card-front {
    padding: .5em;
}


//set icon size
.icon {
    width: $icon-size;
    height: $icon-size;
}

.number {
    text-align: center;
    font-size: $font-size-number;
  //an icon that is part of a number should be half the normal size
    & > .icon {
        width: $icon-size * .5;
        height: $icon-size *.5;
    }
}

//rotate bottom pips 180deg
.rotate {
    transform: rotate(180deg);
}

//adjust the alignment
.cell {
    place-self: center;
}

.pip {
    grid-column-end: span 2;
}

//creating grid
.row {
    display: grid;
    grid-template-columns: repeat($num-columns, $one-column);
    height: 100%;
}

//defining columns
@for $index from $loop-start to $loop-col-end {
    .col-#{$index} {
        @include col($index);
    }
}

//defining rows
@for $index from $loop-start to $loop-row-end {
    .row-#{$index} {
        @include row($index);
    }
}